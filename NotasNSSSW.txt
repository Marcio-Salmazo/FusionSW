BÁSICOS

- Camadas (Layers) de tiles localizadas à direita do quadro, lá são organoizados a ordem das tiles

- StoryBoard Editor (Ctrl + B) Organiza a ordem dos  eventos no jogo

- É possível adicionar efeitos com BW na tag Effect das properties da cena

- Ativar a opção de runtime "Handle Background collisions even out of window"

- Objectos active são animados e podem ser programados

- Objetos Backdrop são estáticos, inanimados e usados para colisão

- A ação de um backdrop influencia outro

- Quanto à colisões o backdrop pode ser obstáculo ou nada, além disso
pode ser marcado como 'COLLISION WITH BOX' o qual o torna pixel perfect
com a caixa que ele se encontra, não respeitando seu formato

- Para os ativos, a velociadade das animações é contabilizada em porcentagem dos fps

- Quando importar um sprite, utilizar a função crop para cortar as bordas7

- Não utilizar as animações appearing e desappearing pois estão atreladas ao código

- Nas animações, setar lower e higher speed para os mesmos valores

- Na configuração de sprites, o hot spot (símbolo de olho) serve como pivô para animações

- Na configuração dos sprites, o pont g do hot spot é o centro do sprite considerando o alpha

- Em ativos que compõem o backdrop, frames coloridos são colocados por cima para diferenciar funcionalidades

- Create at start gera o  objeto ao surgimento do frame, o que é inútil para o 
caso de animções eventuais (explosões por exemplo)

-A opção 'follow  the frame'  quando desativada mantém o objeto estático à  tela,
o que é muito utilizado para  objetos de  UI

- A opção 'use fine detection' tem a mesma função do 'collision with box', porém
a sua ativação indica o respeito ao formato do sprite

- Global objects são consistentes entre multiplos frames

- Os qualifiers não fazem nada por conta própria, são apenas tags, contundo no Worlds
alguns  estão pré programados, por exemplo:
	0 -> Colisão com objeto sólido (Colisão por todos os angulos)
	1 -> Plataforma (Tem colisão superior, mas não inferior)

- Atentar-se para qual layer os objetos se encontram (afim de estarem no mesmo plano)

- Nunca arrastar os objetos, sempre copiar e colar um objeto base 

---------------EVENTOS (CODIFICAÇÃO)

- Não  utilizar  o event editor (Feperd disse que é um lixo kkk)
Utilizar o event list editor (por ser mais próximo à progeamação convencional)

- Utilizar o general edge para evitar que a colisão a animação quebre com pequenos desníveis

- O Fusion lê a codificação em ordem de cima para baixo, SEMPRE

- Na condição há uma  condição e um evento
A condição é o  'quando' e o 'porque algo vai acontecer'
O evento é o que vao acontecer 

por exemplo: Aways -> Set Character to game character

- Alterable valiables de um active podem ser definidos como as variáveis globais
específicas dentro do escopo de um determinado objeto

- Player Input é o objeto que contém programado as definições de controle
do teclado, e joypads

- Na configuração de botões 'KeyActionPressed' executa a ação na primeira verificação
de pressionamento da tecla, 'keyAction verifica a cada frame

- Se houver mais de uma condição na linha, equivale ao comando AND 

- Para condicionais, o objeto 'special' possui funções básicas como Always e Never
e o objeto 'StoryBoard' possui função de troca de cena 

- Afim de evitar multiplas execuções dentro de um loop, utilizar a condicional
'Only one action when event loop'. Pode ser achado no objeto special/Limiti Conditions
 
- Na condicional 'Always', existe o 'fast loop' o qual se equipara a um 'for loop'
por exemplo:

		Always
			Start loop 'loop_name' 99 times
		On Loop 'loop_name'
			Create 'object' at 'reference'

	No exemplo acima 'Start loop' faz parte do 'fast loop' e a ação será executada
	99 vezes, sendo está ação definida no 'on loop', o qual cria um objeto
	na posição da referência.

IR PARA GUIA DO WORLDS DO FEPERD PARA CONFERIR OS DETALHES DE CADA ATIVO/VARIÁVEIS

---------------SENSORES

- Criam um campo ao redor do objeto, sendo úteis (por exemplo na comparação entre colisores)

- Tem como variável o collision, que pode ser usado em condicionais para gerar 
algum evento na colisão

- Para criar condições entre objetos utilizando as colisões, é possível utilizar os
métodos de colisão dentro de cada objeto

	exemplo: 'object' is overlaping 'object1'
	-> Se o objeto 2 estiver sobre o objeto 1, realizar uma dada condição
	-> Atentar-se para que ambos os objetos estajam na mesma layer




